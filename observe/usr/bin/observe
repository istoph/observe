#!/bin/bash
## (c) Christoph Hueffelmann 2015
## E-Mail: chr@istoph.de

DIALOG=${DIALOG=dialog}
debug=true
opath="$HOME/observe"

projekt=$1
if [ "$projekt" != "" ]; then

	#TODO: check if crontab exit
	if [ -d "$opath/$projekt" ]; then
		echo "MACHE BILD"
		#TODO: check free space

		f=$(date +%Y%m%d%H%M%S).jpg
		raw=$opath/$projekt/raw/$f
		raspistill -o $raw -e jpg -t 5000

		FORMAT="800x600>"
        	convert $raw -background '#000000' -resize "$FORMAT" -gravity center -extent "$FORMAT" -strip -sampling-factor '4:2:2' -type TrueColor jpeg:$opath/$projekt/smal/$f

		#TODO: if video mode rm $f && convert exit 0
		#rm $opath/$projekt/raw/$f
		exit 0
	else
		echo "ERROR: Projekt '$projekt' nicht vorhanden." 1>&2
		exit 2
	fi

fi

tempfile=`tempfile 2>/dev/null` || tempfile=/tmp/test$$
trap "rm -f $tempfile" 0 1 2 5 15

projekt=$(crontab -l|grep observe|awk '{print $7}')
if [ "$projekt" != "" ]; then 
	$DIALOG --title "Projekt '$projekt' läuft" \
		--backtitle "Projekt '$projekt' läuft" \
		--yesno "Soll die Aufzeichnung von '$projekt' beendet werden?" 7 60

	retval=$? 
	case $retval in
	   0) 
		echo "Das Projekt '$projekt' wurde beendet."
		crontab -l|grep -v "observe" > $tempfile
		crontab $tempfile
		> $tempfile
		;;
	   1) 
		echo "Das Projekt '$projekt' läuft weiter..."
		exit 0
		;;
	   255) 
		echo "[ESC] key pressed."
		exit 1
		;;
	esac
fi

while true; do

	$DIALOG --clear --title "Wählen Sie einen Menüpunkt aus" \
		--menu "Was möchten Sie machen:" 20 50 10 \
		"1" "Zeit - Datum Einstellen" \
		"2" "Kammera Justierung" \
		"3" "Erstellen von Bildern für eine Diareihe" \
		"4" "Erstellen von Videos aus einzelnen Bildern" \
		"5" "Erstellen von Videos" \
		"6" "Zeige Bilder an" \
		"7" "Zeige Video an" \
		"8" "Exit" 2> $tempfile

	retval=$?

	choice=`cat $tempfile`

	case $retval in
	  0)
	    echo "'$choice' is your favorite hindi singer";;
	  1)
	    echo "Cancel pressed."
	    exit 1
	    ;;
	  255)
	    echo "ESC pressed."
	    exit 1
            ;;
	esac

	case $choice in

	  1)
		#TODO: INSTALL DATUM TO START DATUM
		USERDATE=`$DIALOG --stdout --title "Kalender" --calendar "Bitte Datum wählen..." 0 0 $(date "+%d %m %Y")`

		case $? in
		  0)
		    echo "Date entered: $USERDATE.";;
		  1)
		    echo "Cancel pressed.";;
		  255)
		    echo "Box closed.";;
		esac

		USERTIME=`$DIALOG --stdout --title "Uhrzeit" --timebox "Bitte Zeit setzen..." 0 0 $(date "+%H %M %S")`

		case $? in
		  0)
		    echo "Time entered: $USERTIME.";;
		  1)
		    echo "Cancel pressed.";;
		  255)
		    echo "Box closed.";;
		esac

		clear

		if [ "$debug" == true ]; then
			echo "$(echo $USERDATE| awk  -F'/' '{print $2 "/" $1 "/" $3}') $USERTIME"
			echo "Debug Mode"
			sleep 20
		else
			sudo hwclock --set --date "$(echo $USERDATE| awk  -F'/' '{print $2 "/" $1 "/" $3}') $USERTIME"
			echo -n $?
			sudo hwclock --systohc
			echo -n $?
			LANG=C date +"%c"
			sleep 3
		fi

		;;
	  2)
		clear
		raspistill --demo -t 30000		
		;;
	  3)
		#projekt name
		TITLE="Erstellen von Bildern"
		tempfile2=`tempfile 2>/dev/null` || tempfile=/tmp/test$$
		trap "rm -f $tempfile2" 0 1 2 5 15

		$DIALOG --title "$TITLE" --clear \
			--inputbox "Bitte geben sie einen Projekt Namen an. Dieser darf keine Leer- oder Sonderzeichen enthalten:" 16 51 2> $tempfile2

		retval=$?

		#TODO: fehleingaben abfangen
		#TODO: prüfen ob projekt schon exisitert

		case $retval in
		  0)
		    echo "Input string is `cat $tempfile2`"
		    if test -s $tempfile2 ; then
                        projekt=$(cat $tempfile2)
                        mkdir -v -p $opath/$projekt/{raw,smal}
                    fi
		    ;;
		  1)
		    echo "Cancel pressed.";;
		  255)
		      echo "ESC pressed."
		    ;;
		esac

		#zeit
		tempfile2=`tempfile 2>/dev/null` || tempfile=/tmp/test$$
		trap "rm -f $tempfile2" 0 1 2 5 15

		$DIALOG --clear --title "$TITLE" \
			--menu "Geben Sie an in welchem Intervall die Bilder zu einander gemacht werden sollen:" 20 51 4 \
			"1m" "" \
			"2m" "" \
			"5m" "" \
			"10m" "" \
			"15m" "" \
			"20m" "" \
			"30m" "" \
			"1h" "" \
			"2h" "" \
			"3h" "" \
			"4h" "" \
			"5h" "" \
			"6h" "" \
			"12h" "" 2> $tempfile2

		retval=$?

		choice=`cat $tempfile2`

		case $retval in
		  0)
		    echo "'$choice' is your favorite hindi singer";;
		  1)
			break;
			echo "Cancel pressed."
			;;
		  255)
			break;
		    	echo "ESC pressed."
			;;
		esac

		tempfile2=`tempfile 2>/dev/null`
		trap "rm -f $tempfile2" 0 1 2 5 15

		crontab -l > $tempfile2
		echo >> $tempfile2

		case $choice in
		  "1m") 
			echo "* * * * * /usr/bin/observe $projekt"
			;;
		  "2m") 
			echo "*/2 * * * * /usr/bin/observe $projekt"
			;;
		  "5m") 
			echo "*/5 * * * * /usr/bin/observe $projekt"
			;;
		  "10m") 
			echo "*/10 * * * * /usr/bin/observe $projekt"
			;;
		  "15m") 
			echo "*/15 * * * * /usr/bin/observe $projekt"
			;;
		  "1h") 
			echo "0 * * * * /usr/bin/observe $projekt"
			;;
		  "2h") 
			echo "0 */2 * * * /usr/bin/observe $projekt"
			;;
		esac >> $tempfile2

		$DIALOG --title "$TITLE" --clear \
			--yesno "Drücken Sie Ja dann wird das Programm beendent und mit der Aufnahme begonnen" 10 30

		case $? in
		  0)
		    	echo "Yes chosen."
			crontab $tempfile2
		   	exit 0
			;;
		  1)
		    	echo "No chosen."
		    	#exit 0
			;;
		  255)
		    echo "ESC pressed.";;
		esac
		;;
	  4)
		if [ $(ls -d $opath/*/smal/|wc -l) -eq 0 ]; then
			echo "Es ist noch kein Projekt vorhanden."
			sleep 5
			break
		fi

		##TODO: Error Handeling if no 
		tempfile2=`tempfile 2>/dev/null` || tempfile=/tmp/test$$
		trap "rm -f $tempfile2" 0 1 2 5 15

		dialog --title "Liste der Projekte" --menu "Liste der Projekte" 20 51 4 \
			$(ls -d $opath/*/smal/ | awk -F"$opath" '{print $2}'| awk -F'/' '{print $2}' | while read l; do echo -n "\"$l\" \"$(ls $opath/$l/smal/|wc -l)\" "; done) 2> $tempfile2

		retval=$?
		case $retval in
		  0)
		    echo "Input string is `cat $tempfile2`"
		    projekt=$(cat $tempfile2|awk -F'"' '{print $2}')
		    ;;
		  1)
		    echo "Cancel pressed.";;
		  255)
		      echo "ESC pressed."
		    ;;
		esac

		if [ -d $opath/$projekt/smal/ ]; then
			pushd $opath/$projekt/smal/
			if [ -f ../$projekt.mp4 ]; then rm -v ../$projekt.mp4; fi
			for f in $(ls *.jpg); do if [ "$(stat -c%s $f)" -gt "10000" ]; then cat $f; fi; done | avconv -f image2pipe -r 4 -c:v mjpeg -i - -vcodec libx264 -r 20 -f mpegts ../$projekt.mp4
			popd
		fi
		;;
	  5)
		## Video Speichern
		echo "Haben wir noch nicht:)"
		;;
	  6)
		## select projekt
		echo "Zeige bilder an"
		;;
	  7)
		## select projekt
		echo "Zeige video an"
		;;
	  8)
		echo "GOOD-BYE"
		exit 0
		;;
	  *)
		echo "Funktion noch nicht belegt."
		;;
	esac

done
